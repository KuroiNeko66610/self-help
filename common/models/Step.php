<?php

namespace common\models;

use Yii;

/**
 * This is the model class for table "step".
 *
 * @property integer $id
 * @property integer $post_id
 * @property integer $order
 * @property string $image
 * @property string $text
 *
 * @property Post $post
 */
class Step extends \yii\db\ActiveRecord
{
    public $image_file;

    const SCENARIO_CREATE = 'create';

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'step';
    }

    /* Удаляем файл изображения после удаления шага*/
    public function afterDelete()
    {
        if (is_file(Yii::getAlias('@uploads') . '/post/' . $this->image))
            unlink(Yii::getAlias('@uploads') . '/post/' . $this->image);
        parent::afterDelete(); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['post_id', 'order'], 'integer'],
            [['text'], 'required'],
            [['text', 'image'], 'string'],
            ['image_file', 'image', 'maxSize' => 1024 * 1024 * 2, 'tooBig' => "Файл превышает допустимый размер", 'notImage' => 'Неверный тип файла',],
            [['post_id'], 'exist', 'skipOnError' => true, 'targetClass' => Post::className(), 'targetAttribute' => ['post_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'post_id' => 'Post ID',
            'order' => 'Порядок',
            'image' => 'Изображение',
            'text' => 'Текст',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPost()
    {
        return $this->hasOne(Post::className(), ['id' => 'post_id']);
    }

    /* Генерируем список шагов для dropdown list в форме добавления шага*/
    static function getOrderList($post_id)
    {
        $step = Step::find()->where(['post_id' => $post_id])->orderBy('order DESC')->asArray()->one();

        for ($i = 1; $i <= (int)$step['order'] + 1; $i++) {
            $orders[$i] = $i;
        }

        return $orders;
    }

    /* Возвраяем 2 если был изменен порядок шагов в инструкции и нужно перезагрузить плагин картинок*/
    public function saveStep()
    {
        if (!empty($this->image_file)) {

            /* upload new image. generate new name and delete old*/
            $ext = pathinfo($this->image_file->name, PATHINFO_EXTENSION);
            $path = Yii::getAlias('@uploads') . '/post/';
            do {
                $basename = Step::generateFilename();
                $file = $basename . '.' . $ext;
            } while (is_file($path . $file));

            if ($this->image_file->saveAs($path . $file)) {
                if (!empty($this->oldAttributes['image']) && is_file(Yii::getAlias('@uploads') . '/post/' . $this->oldAttributes['image']))
                    unlink(Yii::getAlias('@uploads') . '/post/' . $this->oldAttributes['image']);
                $this->image = $file;
            }
        }

        if (isset($this->oldAttributes['order']) && $this->order != $this->oldAttributes['order'])
            $reload_carousel = true;
        else $reload_carousel = false;

        if ($this->save(false)) {
            if ($reload_carousel) return 2;
            return true;
        }
        return false;
    }

    /* Генерация случайного имени файла*/
    protected function generateFilename()
    {
        return md5(uniqid());
    }
}
